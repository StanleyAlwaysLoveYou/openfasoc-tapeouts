set XSCHEM_LIBRARY_PATH {}
append XSCHEM_LIBRARY_PATH ${XSCHEM_SHAREDIR}/xschem_library
append XSCHEM_LIBRARY_PATH :$env(PWD)
append XSCHEM_LIBRARY_PATH :$USER_CONF_DIR/xschem_library 
array unset dircolor
set dircolor(xschem_examples$) blue
set dircolor(xschem_180MCU_PDK$) blue
set dircolor(xschem_library$) red
set dircolor(devices$) red
set XSCHEM_START_WINDOW {gf180mcu_tests/0_top.sch}
set netlist_type spice
set line_width 2
set change_lw 1
set color_ps 1
set autotrim_wires 1
set big_grid_points 1
set to_pdf {ps2pdf -dAutoRotatePages=/None}
set show_infowindow 1
set bespice_listen_port 2022
lappend tcl_files ${XSCHEM_SHAREDIR}/ngspice_backannotate.tcl
set toolbar_visible 1
set tabbed_interface 1

## check if env var PDK_ROOT exists, and use it for building open_pdks paths
if { [info exists env(PDK_ROOT)] && $env(PDK_ROOT) ne {} } {
  ## found variable, set tcl PDK_ROOT var
  if {![file isdir $env(PDK_ROOT)]} {
    puts stderr "Warning: PDK_ROOT environment variable is set but path not found on the system."
  }
  set PDK_ROOT $env(PDK_ROOT)
} else {
  ## not existing or empty. 
  puts stderr "Warning: PDK_ROOT env. var. not found or empty, trying to find a pdk install"
  if {[file isdir [pwd]/..]} {
    set PDK_ROOT [file normalize [pwd]/..]
  } else {
    puts stderr {No pdk installation found, set PDK_ROOT env. var. and restart xschem}
  }
}

if {[info exists PDK_ROOT]} {
  set 180MCU_MODELS ${PDK_ROOT}/gf180mcuC/libs.tech/ngspice
  puts stderr "pdk installation: using $PDK_ROOT"
  puts stderr "180MCU_MODELS: $180MCU_MODELS"
}
